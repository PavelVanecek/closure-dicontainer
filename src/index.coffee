body = require './body'
create = require './create'
fs = require 'fs'
intro = require './intro'
outro = require './outro'
typeParser = require './typeparser'

###
  @param {string} depsPath Path to deps.js file.
  @param {Object=} options Configuration.
  @param {Function=} writeFileSync Poor man DI.
  @return {string} Container source.
###
module.exports = (depsPath, options = {}, writeFileSync = fs.writeFileSync) ->

  # DI container class name. Remember to require in app.main.
  # Example: goog.require('app.DiContainer');
  diContainerName = options.name ? 'app.DiContainer'

  # Types to be resolved with autogenerated factory.
  # Example: new app.DiContainer().resolveApp();
  typesToResolve = options.resolve ? ['App']

  # Prefix for deps.js.
  depsPrefix = options.depsPrefix ? '../../../../'

  depsSrc = fs.readFileSync depsPath, 'utf8'

  # Key is type, value is file path.
  typesPaths = null

  # Key is type, value is array of types requiring it.
  requiredBy = null

  [typesPaths, requiredBy] = parseDeps options.name, depsSrc, depsPath

  typeParser = typeParser typesPaths
  intro = intro diContainerName
  body = body diContainerName, typesToResolve, typeParser, requiredBy
  outro = outro diContainerName
  container = create(intro, body, outro)()

  diDeps = getDiDeps depsPrefix, depsPath, diContainerName, container.required
  if depsSrc.indexOf(diDeps) == -1
    depsSrc += diDeps + '\n'
    writeFileSync depsPath, depsSrc

  container.code

parseDeps = (diContainerName, depsSrc, depsPath) ->
  typesPaths = {}
  requiredBy = {}
  goog = addDependency: (filePath, namespaces, requires) ->
    namespaces = namespaces.filter (namespace) ->
      namespace != diContainerName
    for namespace in namespaces
      typesPaths[namespace] = absolutizePath filePath, depsPath
    for require_ in requires
      requiredBy[require_] = (requiredBy[require_] || []).concat namespaces
    return
  eval depsSrc
  [typesPaths, requiredBy]

# TODO(steida): probably wrong, fix in Iodine.
absolutizePath = (filePath, depsPath) ->
  path = require('path').dirname(depsPath) + '/' + filePath
  path

getDiDeps = (depsPrefix, depsPath, name, required) ->
  path = depsPrefix + depsPath
  requires = required.join "', '"
  "goog.addDependency('#{path}', ['#{name}'], ['#{requires}'])"
